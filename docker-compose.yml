name: "stacklab"
services:
  api:
    build:
      context: .
      dockerfile: .docker/Dockerfile
      target: development
    container_name: api
    env_file:
      - .env
    command: bun dev
    ports:
      - "3008:3000"
    networks:
      - stacklab-api-network
    volumes:
      - .:/usr/src/app
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    ports:
      - 5438:${PG_PORT}/tcp
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
    networks:
      - stacklab-api-network
    volumes:
      - db:/var/lib/postgres
      - ./scripts/database:/docker-entrypoint-initdb.d
  storage:
    image: minio/minio:latest
    container_name: storage
    env_file:
      - .env
    command: minio server /var/lib/minio/data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - storage:/var/lib/minio/data
    networks:
      - stacklab-api-network
  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:latest
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - ${MEILI_PORT:-7700}:7700
    networks:
      - stacklab-api-network
    volumes:
      - ./data.ms:/data.ms
    restart: unless-stopped

volumes:
  storage:
  db:

networks:
  stacklab-api-network:
    driver: bridge
  