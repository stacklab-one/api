// table schema generated by introspection
import { pgTable, unique, integer, varchar, uuid, boolean, timestamp } from "drizzle-orm/pg-core"
import { sql } from "drizzle-orm"
import { AuthLevel } from "../enums/AuthLevel";
import { password } from "bun";
export const users = pgTable("users", {
    id: uuid().primaryKey().default(sql`uuid_generate_v4()`),
    firstName: varchar({ length: 255 }),
    lastName: varchar({ length: 255 }),
    username: varchar({ length: 255 }).notNull(),
    email: varchar({ length: 255 }).notNull(),
    password: varchar({ length: 255 }),
    authLevel: integer().notNull().default(AuthLevel.LOGGED_IN),
    isActive: boolean().notNull().default(true),
    externalId: varchar({ length: 255 }),
    profilePictureUrl: varchar({ length: 255 }),

    createdAt: timestamp({withTimezone: true}).notNull().default(sql`now()`),
    updatedAt: timestamp({withTimezone: true}).notNull().default(sql`now()`),
    deletedAt: timestamp({withTimezone: true}).default(sql`NULL`),
},
(table) => {
    return {
        usersEmailUnique: unique("users_email_unique").on(table.email),
    }
});